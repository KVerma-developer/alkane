{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\kv082\\\\OneDrive\\\\Desktop\\\\alkane\\\\client\\\\src\\\\pages\\\\Home.jsx\";\nimport React from \"react\";\nimport Navbar from \"../components/Common/Navbar\";\nvar Home = function Home() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"max-w-2xl mx-auto relative\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Joi is a popular JavaScript library used for data validation. It provides a simple and powerful way to define schemas and validate data against those schemas. Joi is commonly used in server-side applications, especially with Node.js, to ensure that incoming data meets certain requirements or constraints. Here are some key features and concepts of Joi: Schema Definition: With Joi, you can define a schema that represents the structure and constraints of your data. The schema can include various types of data such as strings, numbers, booleans, dates, arrays, and objects.\", \" \", /*#__PURE__*/React.createElement(\"a\", {\n    className: \"text-blue-600 hover:underline\",\n    href: \"/settings\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, \"Alkane Posts\"), \".\")));\n};\nexport default Home;\n\n// import React from \"react\";\n\n// const Home = () => {\n// \tconst handleLogout = () => {\n// \t\tlocalStorage.removeItem(\"token\");\n// \t\twindow.location.reload();\n// \t};\n\n// \treturn (\n// \t\t<div >\n// \t\t\t<nav >\n// \t\t\t\t<h1>fakebook</h1>\n// \t\t\t\t<button  onClick={handleLogout}>\n// \t\t\t\t\tLogout\n// \t\t\t\t</button>\n// \t\t\t</nav>\n// \t\t</div>\n// \t);\n// };\n\n// export default Home;","map":{"version":3,"names":["React","Navbar","Home","createElement","Fragment","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel"],"sources":["C:/Users/kv082/OneDrive/Desktop/alkane/client/src/pages/Home.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Navbar from \"../components/Common/Navbar\";\r\n\r\nconst Home = () => {\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"max-w-2xl mx-auto relative\">\r\n\t\t<Navbar />\r\n        \r\n\r\n        <p className=\"mt-5\">\r\n\t\tJoi is a popular JavaScript library used for data validation. It provides a simple and powerful way to define schemas and validate data against those schemas. Joi is commonly used in server-side applications, especially with Node.js, to ensure that incoming data meets certain requirements or constraints.\r\n\r\nHere are some key features and concepts of Joi:\r\n\r\nSchema Definition: With Joi, you can define a schema that represents the structure and constraints of your data. The schema can include various types of data such as strings, numbers, booleans, dates, arrays, and objects.{\" \"}\r\n          <a\r\n            className=\"text-blue-600 hover:underline\"\r\n\t\t\thref=\"/settings\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Alkane Posts\r\n          </a>\r\n          .\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\n\r\n// import React from \"react\";\r\n\r\n// const Home = () => {\r\n// \tconst handleLogout = () => {\r\n// \t\tlocalStorage.removeItem(\"token\");\r\n// \t\twindow.location.reload();\r\n// \t};\r\n\r\n// \treturn (\r\n// \t\t<div >\r\n// \t\t\t<nav >\r\n// \t\t\t\t<h1>fakebook</h1>\r\n// \t\t\t\t<button  onClick={handleLogout}>\r\n// \t\t\t\t\tLogout\r\n// \t\t\t\t</button>\r\n// \t\t\t</nav>\r\n// \t\t</div>\r\n// \t);\r\n// };\r\n\r\n// export default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,6BAA6B;AAEhD,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EAGjB,oBACEF,KAAA,CAAAG,aAAA,CAAAH,KAAA,CAAAI,QAAA,qBACEJ,KAAA,CAAAG,aAAA;IAAKE,SAAS,EAAC,4BAA4B;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/CZ,KAAA,CAAAG,aAAA,CAACF,MAAM;IAAAK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAGJZ,KAAA,CAAAG,aAAA;IAAGE,SAAS,EAAC,MAAM;IAAAC,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,ikBAKiM,EAAC,GAAG,eACvNZ,KAAA,CAAAG,aAAA;IACEE,SAAS,EAAC,+BAA+B;IAClDQ,IAAI,EAAC,WAAW;IACPC,MAAM,EAAC,QAAQ;IACfC,GAAG,EAAC,qBAAqB;IAAAT,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1B,cAEE,CAAC,KAEH,CACA,CACL,CAAC;AAEP,CAAC;AAED,eAAeV,IAAI;;AAGnB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}